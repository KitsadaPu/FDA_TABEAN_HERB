'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace FDA_SMS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="FDA_SMSSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class FDA_SMS
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private SMS_GATEWAYOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SEND_SMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SEND_SMS_DATAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SEND_LIST_SMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.FDA_TABEAN_HERB_DEMO.My.MySettings.Default.FDA_TABEAN_HERB_DEMO_FDA_SMS_FDA_SMS
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event SMS_GATEWAYCompleted As SMS_GATEWAYCompletedEventHandler
        
        '''<remarks/>
        Public Event SEND_SMSCompleted As SEND_SMSCompletedEventHandler
        
        '''<remarks/>
        Public Event SEND_SMS_DATACompleted As SEND_SMS_DATACompletedEventHandler
        
        '''<remarks/>
        Public Event SEND_LIST_SMSCompleted As SEND_LIST_SMSCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SMS_GATEWAY", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SMS_GATEWAY(ByVal xml As String) As String
            Dim results() As Object = Me.Invoke("SMS_GATEWAY", New Object() {xml})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SMS_GATEWAYAsync(ByVal xml As String)
            Me.SMS_GATEWAYAsync(xml, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SMS_GATEWAYAsync(ByVal xml As String, ByVal userState As Object)
            If (Me.SMS_GATEWAYOperationCompleted Is Nothing) Then
                Me.SMS_GATEWAYOperationCompleted = AddressOf Me.OnSMS_GATEWAYOperationCompleted
            End If
            Me.InvokeAsync("SMS_GATEWAY", New Object() {xml}, Me.SMS_GATEWAYOperationCompleted, userState)
        End Sub
        
        Private Sub OnSMS_GATEWAYOperationCompleted(ByVal arg As Object)
            If (Not (Me.SMS_GATEWAYCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SMS_GATEWAYCompleted(Me, New SMS_GATEWAYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SEND_SMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SEND_SMS(ByVal tel As String, ByVal msg As String) As String
            Dim results() As Object = Me.Invoke("SEND_SMS", New Object() {tel, msg})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SEND_SMSAsync(ByVal tel As String, ByVal msg As String)
            Me.SEND_SMSAsync(tel, msg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SEND_SMSAsync(ByVal tel As String, ByVal msg As String, ByVal userState As Object)
            If (Me.SEND_SMSOperationCompleted Is Nothing) Then
                Me.SEND_SMSOperationCompleted = AddressOf Me.OnSEND_SMSOperationCompleted
            End If
            Me.InvokeAsync("SEND_SMS", New Object() {tel, msg}, Me.SEND_SMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnSEND_SMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.SEND_SMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SEND_SMSCompleted(Me, New SEND_SMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SEND_SMS_DATA", RequestNamespace:="http://tempuri.org/", OneWay:=true, Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SEND_SMS_DATA(ByVal tel As String, ByVal EMAILs As String, ByVal msg As String)
            Me.Invoke("SEND_SMS_DATA", New Object() {tel, EMAILs, msg})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SEND_SMS_DATAAsync(ByVal tel As String, ByVal EMAILs As String, ByVal msg As String)
            Me.SEND_SMS_DATAAsync(tel, EMAILs, msg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SEND_SMS_DATAAsync(ByVal tel As String, ByVal EMAILs As String, ByVal msg As String, ByVal userState As Object)
            If (Me.SEND_SMS_DATAOperationCompleted Is Nothing) Then
                Me.SEND_SMS_DATAOperationCompleted = AddressOf Me.OnSEND_SMS_DATAOperationCompleted
            End If
            Me.InvokeAsync("SEND_SMS_DATA", New Object() {tel, EMAILs, msg}, Me.SEND_SMS_DATAOperationCompleted, userState)
        End Sub
        
        Private Sub OnSEND_SMS_DATAOperationCompleted(ByVal arg As Object)
            If (Not (Me.SEND_SMS_DATACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SEND_SMS_DATACompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SEND_LIST_SMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SEND_LIST_SMS() As String
            Dim results() As Object = Me.Invoke("SEND_LIST_SMS", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SEND_LIST_SMSAsync()
            Me.SEND_LIST_SMSAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SEND_LIST_SMSAsync(ByVal userState As Object)
            If (Me.SEND_LIST_SMSOperationCompleted Is Nothing) Then
                Me.SEND_LIST_SMSOperationCompleted = AddressOf Me.OnSEND_LIST_SMSOperationCompleted
            End If
            Me.InvokeAsync("SEND_LIST_SMS", New Object(-1) {}, Me.SEND_LIST_SMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnSEND_LIST_SMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.SEND_LIST_SMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SEND_LIST_SMSCompleted(Me, New SEND_LIST_SMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub SMS_GATEWAYCompletedEventHandler(ByVal sender As Object, ByVal e As SMS_GATEWAYCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SMS_GATEWAYCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub SEND_SMSCompletedEventHandler(ByVal sender As Object, ByVal e As SEND_SMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SEND_SMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub SEND_SMS_DATACompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub SEND_LIST_SMSCompletedEventHandler(ByVal sender As Object, ByVal e As SEND_LIST_SMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SEND_LIST_SMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
