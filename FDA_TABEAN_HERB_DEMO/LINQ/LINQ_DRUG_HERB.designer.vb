'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="LGT_DRUG_DEMO")>  _
Partial Public Class LINQ_DRUG_HERBDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertTRANSACTION_UPLOAD(instance As TRANSACTION_UPLOAD)
    End Sub
  Partial Private Sub UpdateTRANSACTION_UPLOAD(instance As TRANSACTION_UPLOAD)
    End Sub
  Partial Private Sub DeleteTRANSACTION_UPLOAD(instance As TRANSACTION_UPLOAD)
    End Sub
  Partial Private Sub InsertGEN_RCVNO(instance As GEN_RCVNO)
    End Sub
  Partial Private Sub UpdateGEN_RCVNO(instance As GEN_RCVNO)
    End Sub
  Partial Private Sub DeleteGEN_RCVNO(instance As GEN_RCVNO)
    End Sub
  Partial Private Sub InsertMAS_STAFF_NAME_HERB(instance As MAS_STAFF_NAME_HERB)
    End Sub
  Partial Private Sub UpdateMAS_STAFF_NAME_HERB(instance As MAS_STAFF_NAME_HERB)
    End Sub
  Partial Private Sub DeleteMAS_STAFF_NAME_HERB(instance As MAS_STAFF_NAME_HERB)
    End Sub
  Partial Private Sub InsertLOG_STATUS(instance As LOG_STATUS)
    End Sub
  Partial Private Sub UpdateLOG_STATUS(instance As LOG_STATUS)
    End Sub
  Partial Private Sub DeleteLOG_STATUS(instance As LOG_STATUS)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("LGT_DRUGConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property SET_PAGE_MAINs() As System.Data.Linq.Table(Of SET_PAGE_MAIN)
		Get
			Return Me.GetTable(Of SET_PAGE_MAIN)
		End Get
	End Property
	
	Public ReadOnly Property TRANSACTION_UPLOADs() As System.Data.Linq.Table(Of TRANSACTION_UPLOAD)
		Get
			Return Me.GetTable(Of TRANSACTION_UPLOAD)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TEMPLATE_PROCESSes() As System.Data.Linq.Table(Of MAS_TEMPLATE_PROCESS)
		Get
			Return Me.GetTable(Of MAS_TEMPLATE_PROCESS)
		End Get
	End Property
	
	Public ReadOnly Property GEN_RCVNOs() As System.Data.Linq.Table(Of GEN_RCVNO)
		Get
			Return Me.GetTable(Of GEN_RCVNO)
		End Get
	End Property
	
	Public ReadOnly Property MAS_STAFF_NAME_HERBs() As System.Data.Linq.Table(Of MAS_STAFF_NAME_HERB)
		Get
			Return Me.GetTable(Of MAS_STAFF_NAME_HERB)
		End Get
	End Property
	
	Public ReadOnly Property LOG_STATUS() As System.Data.Linq.Table(Of LOG_STATUS)
		Get
			Return Me.GetTable(Of LOG_STATUS)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SET_PAGE_MAIN")>  _
Partial Public Class SET_PAGE_MAIN
	
	Private _IDA As Integer
	
	Private _PID As System.Nullable(Of Integer)
	
	Private _TYPE_PEOPLE As System.Nullable(Of Integer)
	
	Private _PROCESS_WEIGHT As String
	
	Private _PAGE_ID As String
	
	Private _PAGE_NAME As String
	
	Private _PAGE_PATH As String
	
	Private _ACTIVEFACT As System.Nullable(Of Integer)
	
	Private _TYPE_ID As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me._IDA = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PID", DbType:="Int")>  _
	Public Property PID() As System.Nullable(Of Integer)
		Get
			Return Me._PID
		End Get
		Set
			If (Me._PID.Equals(value) = false) Then
				Me._PID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_PEOPLE", DbType:="Int")>  _
	Public Property TYPE_PEOPLE() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_PEOPLE
		End Get
		Set
			If (Me._TYPE_PEOPLE.Equals(value) = false) Then
				Me._TYPE_PEOPLE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_WEIGHT", DbType:="NChar(10)")>  _
	Public Property PROCESS_WEIGHT() As String
		Get
			Return Me._PROCESS_WEIGHT
		End Get
		Set
			If (String.Equals(Me._PROCESS_WEIGHT, value) = false) Then
				Me._PROCESS_WEIGHT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAGE_ID", DbType:="NChar(10)")>  _
	Public Property PAGE_ID() As String
		Get
			Return Me._PAGE_ID
		End Get
		Set
			If (String.Equals(Me._PAGE_ID, value) = false) Then
				Me._PAGE_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAGE_NAME", DbType:="NVarChar(50)")>  _
	Public Property PAGE_NAME() As String
		Get
			Return Me._PAGE_NAME
		End Get
		Set
			If (String.Equals(Me._PAGE_NAME, value) = false) Then
				Me._PAGE_NAME = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAGE_PATH", DbType:="NVarChar(MAX)")>  _
	Public Property PAGE_PATH() As String
		Get
			Return Me._PAGE_PATH
		End Get
		Set
			If (String.Equals(Me._PAGE_PATH, value) = false) Then
				Me._PAGE_PATH = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Int")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Integer)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me._ACTIVEFACT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_ID", DbType:="Int")>  _
	Public Property TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_ID
		End Get
		Set
			If (Me._TYPE_ID.Equals(value) = false) Then
				Me._TYPE_ID = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TRANSACTION_UPLOAD")>  _
Partial Public Class TRANSACTION_UPLOAD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CITIEZEN_ID As String
	
	Private _CITIEZEN_ID_AUTHORIZE As String
	
	Private _EMAIL As String
	
	Private _UPLOAD_DATE As System.Nullable(Of Date)
	
	Private _STATUS As String
	
	Private _DESCRIPTION As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _REF_NO As String
	
	Private _DOWNLOAD_ID As System.Nullable(Of Integer)
	
	Private _YEAR As String
	
	Private _GEN_NO As System.Nullable(Of Integer)
	
	Private _PROCESS_ID_STR As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnUPLOAD_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPLOAD_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnREF_NOChanging(value As String)
    End Sub
    Partial Private Sub OnREF_NOChanged()
    End Sub
    Partial Private Sub OnDOWNLOAD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOWNLOAD_IDChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnGEN_NOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGEN_NOChanged()
    End Sub
    Partial Private Sub OnPROCESS_ID_STRChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_ID_STRChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID() As String
		Get
			Return Me._CITIEZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID, value) = false) Then
				Me.OnCITIEZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID = value
				Me.SendPropertyChanged("CITIEZEN_ID")
				Me.OnCITIEZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIEZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIEZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIEZEN_ID_AUTHORIZE")
				Me.OnCITIEZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPLOAD_DATE", DbType:="DateTime")>  _
	Public Property UPLOAD_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPLOAD_DATE
		End Get
		Set
			If (Me._UPLOAD_DATE.Equals(value) = false) Then
				Me.OnUPLOAD_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPLOAD_DATE = value
				Me.SendPropertyChanged("UPLOAD_DATE")
				Me.OnUPLOAD_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(50)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_NO", DbType:="NVarChar(MAX)")>  _
	Public Property REF_NO() As String
		Get
			Return Me._REF_NO
		End Get
		Set
			If (String.Equals(Me._REF_NO, value) = false) Then
				Me.OnREF_NOChanging(value)
				Me.SendPropertyChanging
				Me._REF_NO = value
				Me.SendPropertyChanged("REF_NO")
				Me.OnREF_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOWNLOAD_ID", DbType:="Int")>  _
	Public Property DOWNLOAD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DOWNLOAD_ID
		End Get
		Set
			If (Me._DOWNLOAD_ID.Equals(value) = false) Then
				Me.OnDOWNLOAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._DOWNLOAD_ID = value
				Me.SendPropertyChanged("DOWNLOAD_ID")
				Me.OnDOWNLOAD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(10)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GEN_NO", DbType:="Int")>  _
	Public Property GEN_NO() As System.Nullable(Of Integer)
		Get
			Return Me._GEN_NO
		End Get
		Set
			If (Me._GEN_NO.Equals(value) = false) Then
				Me.OnGEN_NOChanging(value)
				Me.SendPropertyChanging
				Me._GEN_NO = value
				Me.SendPropertyChanged("GEN_NO")
				Me.OnGEN_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID_STR", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID_STR() As String
		Get
			Return Me._PROCESS_ID_STR
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID_STR, value) = false) Then
				Me.OnPROCESS_ID_STRChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID_STR = value
				Me.SendPropertyChanged("PROCESS_ID_STR")
				Me.OnPROCESS_ID_STRChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TEMPLATE_PROCESS")>  _
Partial Public Class MAS_TEMPLATE_PROCESS
	
	Private _IDA As Integer
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _LCNTYPECD As String
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _GROUPS As System.Nullable(Of Integer)
	
	Private _PREVIEW As System.Nullable(Of Integer)
	
	Private _PDF_TEMPLATE As String
	
	Private _XML_PATH As String
	
	Private _PDF_OUTPUT As String
	
	Private _DESCRIPTION As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me._IDA = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me._PROCESS_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNTYPECD", DbType:="NVarChar(MAX)")>  _
	Public Property LCNTYPECD() As String
		Get
			Return Me._LCNTYPECD
		End Get
		Set
			If (String.Equals(Me._LCNTYPECD, value) = false) Then
				Me._LCNTYPECD = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me._STATUS_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPS", DbType:="Int")>  _
	Public Property GROUPS() As System.Nullable(Of Integer)
		Get
			Return Me._GROUPS
		End Get
		Set
			If (Me._GROUPS.Equals(value) = false) Then
				Me._GROUPS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREVIEW", DbType:="Int")>  _
	Public Property PREVIEW() As System.Nullable(Of Integer)
		Get
			Return Me._PREVIEW
		End Get
		Set
			If (Me._PREVIEW.Equals(value) = false) Then
				Me._PREVIEW = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDF_TEMPLATE", DbType:="NVarChar(MAX)")>  _
	Public Property PDF_TEMPLATE() As String
		Get
			Return Me._PDF_TEMPLATE
		End Get
		Set
			If (String.Equals(Me._PDF_TEMPLATE, value) = false) Then
				Me._PDF_TEMPLATE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_PATH", DbType:="NVarChar(MAX)")>  _
	Public Property XML_PATH() As String
		Get
			Return Me._XML_PATH
		End Get
		Set
			If (String.Equals(Me._XML_PATH, value) = false) Then
				Me._XML_PATH = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDF_OUTPUT", DbType:="NVarChar(MAX)")>  _
	Public Property PDF_OUTPUT() As String
		Get
			Return Me._PDF_OUTPUT
		End Get
		Set
			If (String.Equals(Me._PDF_OUTPUT, value) = false) Then
				Me._PDF_OUTPUT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me._DESCRIPTION = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_RCVNO")>  _
Partial Public Class GEN_RCVNO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PVNCD As System.Nullable(Of Integer)
	
	Private _YEARS As System.Nullable(Of Integer)
	
	Private _GEN_RCV As String
	
	Private _GEN_TYPE As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    Partial Private Sub OnYEARSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYEARSChanged()
    End Sub
    Partial Private Sub OnGEN_RCVChanging(value As String)
    End Sub
    Partial Private Sub OnGEN_RCVChanged()
    End Sub
    Partial Private Sub OnGEN_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnGEN_TYPEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="Int")>  _
	Public Property PVNCD() As System.Nullable(Of Integer)
		Get
			Return Me._PVNCD
		End Get
		Set
			If (Me._PVNCD.Equals(value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEARS", DbType:="Int")>  _
	Public Property YEARS() As System.Nullable(Of Integer)
		Get
			Return Me._YEARS
		End Get
		Set
			If (Me._YEARS.Equals(value) = false) Then
				Me.OnYEARSChanging(value)
				Me.SendPropertyChanging
				Me._YEARS = value
				Me.SendPropertyChanged("YEARS")
				Me.OnYEARSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GEN_RCV", DbType:="NVarChar(50)")>  _
	Public Property GEN_RCV() As String
		Get
			Return Me._GEN_RCV
		End Get
		Set
			If (String.Equals(Me._GEN_RCV, value) = false) Then
				Me.OnGEN_RCVChanging(value)
				Me.SendPropertyChanging
				Me._GEN_RCV = value
				Me.SendPropertyChanged("GEN_RCV")
				Me.OnGEN_RCVChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GEN_TYPE", DbType:="NVarChar(50)")>  _
	Public Property GEN_TYPE() As String
		Get
			Return Me._GEN_TYPE
		End Get
		Set
			If (String.Equals(Me._GEN_TYPE, value) = false) Then
				Me.OnGEN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._GEN_TYPE = value
				Me.SendPropertyChanged("GEN_TYPE")
				Me.OnGEN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_STAFF_NAME_HERB")>  _
Partial Public Class MAS_STAFF_NAME_HERB
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _STAFF_NAME As String
	
	Private _STAFF_NAME_ENG As String
	
	Private _CITIZEN_ID As String
	
	Private _POSITION_ID As System.Nullable(Of Integer)
	
	Private _POSITION_NAME As String
	
	Private _TYPE_ID As System.Nullable(Of Integer)
	
	Private _IS_USE As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnSTAFF_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_NAMEChanged()
    End Sub
    Partial Private Sub OnSTAFF_NAME_ENGChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_NAME_ENGChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnPOSITION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPOSITION_IDChanged()
    End Sub
    Partial Private Sub OnPOSITION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITION_NAMEChanged()
    End Sub
    Partial Private Sub OnTYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_IDChanged()
    End Sub
    Partial Private Sub OnIS_USEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_USEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_NAME() As String
		Get
			Return Me._STAFF_NAME
		End Get
		Set
			If (String.Equals(Me._STAFF_NAME, value) = false) Then
				Me.OnSTAFF_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_NAME = value
				Me.SendPropertyChanged("STAFF_NAME")
				Me.OnSTAFF_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_NAME_ENG", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_NAME_ENG() As String
		Get
			Return Me._STAFF_NAME_ENG
		End Get
		Set
			If (String.Equals(Me._STAFF_NAME_ENG, value) = false) Then
				Me.OnSTAFF_NAME_ENGChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_NAME_ENG = value
				Me.SendPropertyChanged("STAFF_NAME_ENG")
				Me.OnSTAFF_NAME_ENGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(13)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_ID", DbType:="Int")>  _
	Public Property POSITION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._POSITION_ID
		End Get
		Set
			If (Me._POSITION_ID.Equals(value) = false) Then
				Me.OnPOSITION_IDChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_ID = value
				Me.SendPropertyChanged("POSITION_ID")
				Me.OnPOSITION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION_NAME() As String
		Get
			Return Me._POSITION_NAME
		End Get
		Set
			If (String.Equals(Me._POSITION_NAME, value) = false) Then
				Me.OnPOSITION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_NAME = value
				Me.SendPropertyChanged("POSITION_NAME")
				Me.OnPOSITION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_ID", DbType:="Int")>  _
	Public Property TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_ID
		End Get
		Set
			If (Me._TYPE_ID.Equals(value) = false) Then
				Me.OnTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_ID = value
				Me.SendPropertyChanged("TYPE_ID")
				Me.OnTYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_USE", DbType:="Bit")>  _
	Public Property IS_USE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_USE
		End Get
		Set
			If (Me._IS_USE.Equals(value) = false) Then
				Me.OnIS_USEChanging(value)
				Me.SendPropertyChanging
				Me._IS_USE = value
				Me.SendPropertyChanged("IS_USE")
				Me.OnIS_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_STATUS")>  _
Partial Public Class LOG_STATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As String
	
	Private _STATUS_DATE As System.Nullable(Of Date)
	
	Private _IDENTIFY As String
	
	Private _IDENTIFY_SELECT As String
	
	Private _STAFF_ID As System.Nullable(Of Integer)
	
	Private _STAFF_NAME As String
	
	Private _STAFF_NAME_SELECT As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTATUS_DATEChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnIDENTIFY_SELECTChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFY_SELECTChanged()
    End Sub
    Partial Private Sub OnSTAFF_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTAFF_IDChanged()
    End Sub
    Partial Private Sub OnSTAFF_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_NAMEChanged()
    End Sub
    Partial Private Sub OnSTAFF_NAME_SELECTChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_NAME_SELECTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_DATE", DbType:="DateTime")>  _
	Public Property STATUS_DATE() As System.Nullable(Of Date)
		Get
			Return Me._STATUS_DATE
		End Get
		Set
			If (Me._STATUS_DATE.Equals(value) = false) Then
				Me.OnSTATUS_DATEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_DATE = value
				Me.SendPropertyChanged("STATUS_DATE")
				Me.OnSTATUS_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY_SELECT", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY_SELECT() As String
		Get
			Return Me._IDENTIFY_SELECT
		End Get
		Set
			If (String.Equals(Me._IDENTIFY_SELECT, value) = false) Then
				Me.OnIDENTIFY_SELECTChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY_SELECT = value
				Me.SendPropertyChanged("IDENTIFY_SELECT")
				Me.OnIDENTIFY_SELECTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_ID", DbType:="Int")>  _
	Public Property STAFF_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STAFF_ID
		End Get
		Set
			If (Me._STAFF_ID.Equals(value) = false) Then
				Me.OnSTAFF_IDChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_ID = value
				Me.SendPropertyChanged("STAFF_ID")
				Me.OnSTAFF_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_NAME() As String
		Get
			Return Me._STAFF_NAME
		End Get
		Set
			If (String.Equals(Me._STAFF_NAME, value) = false) Then
				Me.OnSTAFF_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_NAME = value
				Me.SendPropertyChanged("STAFF_NAME")
				Me.OnSTAFF_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_NAME_SELECT", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_NAME_SELECT() As String
		Get
			Return Me._STAFF_NAME_SELECT
		End Get
		Set
			If (String.Equals(Me._STAFF_NAME_SELECT, value) = false) Then
				Me.OnSTAFF_NAME_SELECTChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_NAME_SELECT = value
				Me.SendPropertyChanged("STAFF_NAME_SELECT")
				Me.OnSTAFF_NAME_SELECTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
